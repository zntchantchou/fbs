// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserSettings {
  id       String  @id @default(uuid())
  userId   String  @unique
  darkmode Boolean
}

model Cart {
  id        String     @id @default(uuid())
  userId    String     @unique
  items     CartItem[]
  timestamp DateTime   @default(now())
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model CartItem {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  cartId    String
  quantity  Int
  timestamp DateTime
  cart      Cart     @relation(fields: [cartId], references: [id])
}

model Product {
  id              String           @id @default(uuid())
  name            String           @unique
  userId          String
  price           Float
  stockQuantity   Int
  description     String
  timestamp       DateTime         @default(now())
  model           String
  brand           String
  pictures        ProductPicture[]
  pictureFolderId String
  cartItem        CartItem[]
  category        Category         @relation(fields: [categoryId], references: [id])
  categoryId      String
  summaries       ProductSummary[]
  orderItems      OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  price     Float
  timestamp DateTime @default(now())
  quantity  Int
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
}

model Order {
  id          String      @id @default(uuid())
  userId      String
  items       OrderItem[]
  timestamp   DateTime    @default(now())
  totalAmount Float
}

model ProductPicture {
  id        String  @id @default(uuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])
  url       String
  filename  String
  index     Int
}

model ProductSummary {
  id                String   @id @default(uuid())
  timestamp         DateTime @default(now())
  productId         String
  product           Product  @relation(fields: [productId], references: [id])
  addedToCartCount  Int
  visitsToPageCount Int
  totalAmount       Float
  totalSales        Int
}
